version: "3"
services:
  users:
    container_name: users
    build:
      context: users
      args:
        TARGET_DIR: users
        VERSION: 1.0.0-SNAPSHOT
    environment:
      - JAVA_TOOL_OPTIONS="-Xmx512m"
      - SPRING_PROFILES_ACTIVE=docker
      # use this when you need to debug the docker container
      # - JAVA_TOOL_OPTIONS="-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y"
    ports:
      - "8080:8080"
    depends_on:
      - postgresql
      - zookeeper
      - kafka
    networks:
      - banking

  auth:
    container_name: authentication
    build:
      context: users
      args:
        TARGET_DIR: authentication
        VERSION: 1.0.0-SNAPSHOT
    environment:
      JAVA_TOOL_OPTIONS: "-Xmx512m"
      # use this when you need to debug the docker container
      # - JAVA_TOOL_OPTIONS="-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y"
    ports:
      - "8082:8080"
    depends_on:
      - users
    networks:
      - banking

#
#  account:
#    container_name: account
#    build:
#      context: .
#      args:
#        TARGET_DIR: account
#        VERSION: 1.0.0-SNAPSHOT
#    environment:
#      JAVA_TOOL_OPTIONS: "-Xmx512m"
#      # use this when you need to debug the docker container
#      # - JAVA_TOOL_OPTIONS="-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y"
#    networks:
#      - banking
#    ports:
#      - "8083:8080"
#    depends_on:
#      - postgresql
#
#  transaction:
#    container_name: transaction
#    build:
#      context: .
#      args:
#        TARGET_DIR: transaction
#        VERSION: 1.0.0-SNAPSHOT
#    environment:
#      JAVA_TOOL_OPTIONS: "-Xmx512m"
#      # use this when you need to debug the docker container
#      # - JAVA_TOOL_OPTIONS="-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y"
#    networks:
#      - banking
#    ports:
#      - "8084:8080"
#    depends_on:
#      - postgresql

  zookeeper:
    image: confluentinc/cp-zookeeper:3.3.1
    container_name: "zookeeper"
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - banking

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    container_name: "kafka"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: DOCKER://0.0.0.0:29092,LOCALHOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka:29092,LOCALHOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,LOCALHOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - banking

  postgresql:
    image: postgres:14.1-alpine
    container_name: "postgresql"
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - ./configuration/SQL/1-Users-DDL.sql:/docker-entrypoint-initdb.d/1-Users-DDL.sql
      - db:/var/lib/postgresql/data
    networks:
      - banking

volumes:
  db:
    driver: local

networks:
  banking:
    external: true
    driver: host